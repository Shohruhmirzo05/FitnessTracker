extends ../layout

block content
  div.d-flex.justify-content-between.align-items-center.mb-4
    h1= goal.title
    div
      a.btn.btn-outline-primary.me-2(href=`/goals/${goal._id}/edit`) Edit Goal
      form.d-inline(action=`/goals/${goal._id}?_method=DELETE`, method="POST", onsubmit="return confirm('Are you sure you want to delete this goal?')")
        button.btn.btn-outline-danger(type="submit") Delete Goal
  
  div.row
    div.col-md-8
      div.card.mb-4
        div.card-body
          if goal.description
            p.lead= goal.description
          
          div.row.mb-3
            div.col-md-6
              h5 Goal Details
              ul.list-group.list-group-flush
                li.list-group-item
                  strong Type: 
                  | #{goal.goalType}
                li.list-group-item
                  strong Target: 
                  | #{goal.targetValue} #{goal.unit}
                li.list-group-item
                  strong Start Date: 
                  | #{new Date(goal.startDate).toLocaleDateString()}
                li.list-group-item
                  strong End Date: 
                  | #{new Date(goal.endDate).toLocaleDateString()}
                  
            div.col-md-6
              h5 Progress
              div.progress.mb-3
                - var progressWidth = goal.progress > 100 ? 100 : goal.progress
                div.progress-bar(role="progressbar", style=`width: ${progressWidth}%`, aria-valuenow=goal.progress, aria-valuemin="0", aria-valuemax="100") #{Math.round(goal.progress)}%
              
              p
                strong Current: 
                | #{goal.currentValue} #{goal.unit}
                
              if goal.completed
                div.alert.alert-success
                  strong Congratulations! 
                  | You've completed this goal.
              else
                - var daysLeft = Math.ceil((new Date(goal.endDate) - new Date()) / (1000 * 60 * 60 * 24))
                if daysLeft > 0
                  div.alert.alert-info
                    strong #{daysLeft} days left 
                    | to reach your goal.
                else
                  div.alert.alert-warning
                    strong Goal overdue. 
                    | The deadline has passed.
      
      div.card.mt-4
        div.card-header
          h5.mb-0 Update Progress
        div.card-body
          form(action=`/goals/${goal._id}?_method=PUT`, method="POST")
            div.form-group.mb-3
              label.form-label(for="currentValue") Current Value (#{goal.unit})
              input.form-control(type="number", id="currentValue", name="currentValue", value=goal.currentValue, step="any", required)
            
            input(type="hidden", name="title", value=goal.title)
            input(type="hidden", name="description", value=goal.description)
            input(type="hidden", name="goalType", value=goal.goalType)
            input(type="hidden", name="targetValue", value=goal.targetValue)
            input(type="hidden", name="unit", value=goal.unit)
            input(type="hidden", name="startDate", value=goal.startDate.toISOString().slice(0, 10))
            input(type="hidden", name="endDate", value=goal.endDate.toISOString().slice(0, 10))
            
            button.btn.btn-primary(type="submit") Update Progress
            
    div.col-md-4
      div.card
        div.card-header.bg-primary.text-white
          h5.mb-0 Goal Summary
        div.card-body
          ul.list-group.list-group-flush
            li.list-group-item.d-flex.justify-content-between
              span Goal Status:
              if goal.completed
                span.badge.bg-success Completed
              else if Math.ceil((new Date(goal.endDate) - new Date()) / (1000 * 60 * 60 * 24)) < 0
                span.badge.bg-danger Overdue
              else
                span.badge.bg-info In Progress
            
            li.list-group-item.d-flex.justify-content-between
              span Progress:
              span #{Math.round(goal.progress)}%
              
            li.list-group-item.d-flex.justify-content-between
              span Current:
              span #{goal.currentValue} #{goal.unit}
              
            li.list-group-item.d-flex.justify-content-between
              span Target:
              span #{goal.targetValue} #{goal.unit}
              
  div.mt-4
    a.btn.btn-secondary(href="/goals") Back to All Goals 